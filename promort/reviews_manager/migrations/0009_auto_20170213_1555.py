# -*- coding: utf-8 -*-

#  Copyright (c) 2019, CRS4
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy of
#  this software and associated documentation files (the "Software"), to deal in
#  the Software without restriction, including without limitation the rights to
#  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
#  the Software, and to permit persons to whom the Software is furnished to do so,
#  subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
#  FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
#  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Generated by Django 1.10.5 on 2017-02-13 15:55
from __future__ import unicode_literals

from django.db import migrations
from django.db.models import Q


def check_rois_annotation_steps_dates(apps, schema_editor):
    ROIsAnnotationStep = apps.get_model('reviews_manager', 'ROIsAnnotationStep')
    SlideQualityControl = apps.get_model('slides_manager', 'SlideQualityControl')
    ClinicalAnnotationStep = apps.get_model('reviews_manager', 'ClinicalAnnotationStep')
    for step in ROIsAnnotationStep.objects.exclude(
            id__in=SlideQualityControl.objects.all().values_list('rois_annotation_step', flat=True)):
        step.start_date = None
        step.completion_date = None
        step.save()
        cstep = ClinicalAnnotationStep.objects.get(rois_review_step=step)
        cstep.start_date = None
        cstep.completion_date = None
        cstep.save()


def check_rois_annotations_dates(apps, schema_editor):
    ROIsAnnotation = apps.get_model('reviews_manager', 'ROIsAnnotation')
    ROIsAnnotationStep = apps.get_model('reviews_manager', 'ROIsAnnotationStep')
    for annotation in ROIsAnnotation.objects.filter(Q(start_date__isnull=False) | Q(completion_date__isnull=False)):
        erase_dates = True
        for rstep in ROIsAnnotationStep.objects.filter(rois_annotation=annotation):
            if not(rstep.start_date is None):
                erase_dates = False
                break
        if erase_dates:
            annotation.start_date = None
            annotation.completion_date = None
            annotation.save()


def check_clinical_annotation_steps_dates(apps, schema_editor):
    SlideQualityControl = apps.get_model('slides_manager', 'SlideQualityControl')
    ClinicalAnnotationStep = apps.get_model('reviews_manager', 'ClinicalAnnotationStep')
    for qc in SlideQualityControl.objects.all():
        cstep = ClinicalAnnotationStep.objects.filter(rois_review_step=qc.rois_annotation_step).first()
        if qc.adequate_slide:
            cstep.start_date = None
            cstep.completion_date = None
        else:
            cstep.start_date = qc.rois_annotation_step.start_date
            cstep.completion_date = qc.rois_annotation_step.completion_date
        cstep.save()


def check_clinical_annotations_dates(apps, schema_editor):
    ClinicalAnnotation = apps.get_model('reviews_manager', 'ClinicalAnnotation')
    ClinicalAnnotationStep = apps.get_model('reviews_manager', 'ClinicalAnnotationStep')
    for annotation in ClinicalAnnotation.objects.filter(Q(start_date__isnull=False) | Q(completion_date__isnull=False)):
        erase_dates = True
        for cstep in ClinicalAnnotationStep.objects.filter(clinical_annotation=annotation):
            if not (cstep.start_date is None):
                erase_dates = False
                break
        if erase_dates:
            annotation.start_date = None
            annotation.completion_date = None
            annotation.save()


class Migration(migrations.Migration):

    dependencies = [
        ('slides_manager', '0010_auto_20170207_1018'),
        ('reviews_manager', '0008_auto_20161215_1519'),
    ]

    operations = [
        migrations.RunPython(check_rois_annotation_steps_dates),
        migrations.RunPython(check_rois_annotations_dates),
        migrations.RunPython(check_clinical_annotation_steps_dates),
        migrations.RunPython(check_clinical_annotations_dates)
    ]
