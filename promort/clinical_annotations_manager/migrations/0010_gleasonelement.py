# -*- coding: utf-8 -*-

#  Copyright (c) 2019, CRS4
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy of
#  this software and associated documentation files (the "Software"), to deal in
#  the Software without restriction, including without limitation the rights to
#  use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
#  the Software, and to permit persons to whom the Software is furnished to do so,
#  subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
#  FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
#  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Generated by Django 1.10.5 on 2017-04-14 16:06
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('clinical_annotations_manager', '0009_auto_20170411_0707'),
    ]

    operations = [
        migrations.CreateModel(
            name='GleasonElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gleason_type', models.CharField(choices=[(b'G1', b'GLEASON_1'), (b'G2', b'GLEASON_2'), (b'G3', b'GLEASON_3'), (b'G4', b'GLEASON_4'), (b'G5', b'GLEASON_5')], max_length=2)),
                ('json_path', models.TextField()),
                ('area', models.FloatField()),
                ('cellular_density_helper_json', models.TextField(blank=True, null=True)),
                ('cellular_density', models.IntegerField(blank=True, null=True)),
                ('cells_count', models.IntegerField(blank=True, null=True)),
                ('focus_region_annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                              related_name='gleason_elements',
                                                              to='clinical_annotations_manager.FocusRegionAnnotation')),
            ],
        ),
    ]
